version: "3.8"

services:

    demlabs_django_gunicorn_wsgi:
        container_name: demlabs_django_gunicorn_wsgi
        env_file:
            - .env
        build:
            context: .
            dockerfile: ./Docker/Django_Gunicorn_WSGI/Dockerfile
        volumes:
            - ./static:/app/static
        ports: 
            - "8070:8070"
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:8070 || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 5
        networks:
            - demlabs-app-network

    demlabs_nginx:
        container_name: demlabs_nginx
        build:
            context: .
            dockerfile: ./Docker/Nginx/Dockerfile
        ports:
            - "8001:8001"
        volumes:
            - ./static:/static
        depends_on:
            demlabs_django_gunicorn_wsgi:
                condition: service_healthy
        networks:
            - demlabs-app-network

    demlabs_database:
        container_name: demlabs_database
        env_file:
            - .env
        build:
            context: .
            dockerfile: ./Docker/Database/Dockerfile
            args:
                - POSTGRES_DB=${POSTGRES_DB}
                - POSTGRES_USER=${POSTGRES_USER}
                - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
                - POSTGRES_PORT=${POSTGRES_PORT}
        ports:
            - ${POSTGRES_PORT}:${POSTGRES_PORT}
        networks:
          - demlabs-app-network        

    demlabs_redis:
        container_name: demlabs_redis
        build:
            context: .
            dockerfile: ./Docker/Redis/Dockerfile
        ports:
            - "6379:6379"
        volumes:
            - redis:/data
        restart: always
        networks:
          - demlabs-app-network

volumes:
  redis:

networks:
  demlabs-app-network:
